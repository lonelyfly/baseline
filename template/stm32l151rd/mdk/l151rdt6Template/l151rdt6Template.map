Component: ARM Compiler 6.14.1 Tool: armlink [5db06d00]

==============================================================================

Section Cross References

    startup_stm32l151xd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l151xd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l151xd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l151xd.o(RESET) refers to startup_stm32l151xd.o(STACK) for __initial_sp
    startup_stm32l151xd.o(RESET) refers to startup_stm32l151xd.o(.text) for Reset_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32l151xd.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32l151xd.o(RESET) refers to stm32l1xx_it.o(.text.TIM11_IRQHandler) for TIM11_IRQHandler
    startup_stm32l151xd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l151xd.o(.text) refers to system_stm32l1xx.o(.text.SystemInit) for SystemInit
    startup_stm32l151xd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32l151xd.o(.text) refers to startup_stm32l151xd.o(HEAP) for Heap_Mem
    startup_stm32l151xd.o(.text) refers to startup_stm32l151xd.o(STACK) for Stack_Mem
    main.o(.text.main) refers to stm32l1xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.main) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.UserIdleProcess) refers to main.o(.text.UserIdleProcess) for [Anonymous Symbol]
    main.o(.text.osRtxIdleThread) refers to main.o(.text.UserIdleProcess) for UserIdleProcess
    main.o(.ARM.exidx.text.osRtxIdleThread) refers to main.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.osRtxErrorNotify) refers to main.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32l1xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32l1xx_hal_msp.o(.text.HAL_MspInit) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for HAL_PWR_ConfigPVD
    stm32l1xx_hal_msp.o(.text.HAL_MspInit) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for HAL_PWR_EnablePVD
    stm32l1xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l1xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32l1xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32l1xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32l1xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32l1xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32l1xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32l1xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32l1xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32l1xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32l1xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32l1xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32l1xx_it.o(.text.TIM11_IRQHandler) refers to stm32l1xx_hal_timebase_tim.o(.bss.htim11) for htim11
    stm32l1xx_it.o(.text.TIM11_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32l1xx_it.o(.ARM.exidx.text.TIM11_IRQHandler) refers to stm32l1xx_it.o(.text.TIM11_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMAError) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32l1xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l1xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32l1xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l1xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32l1xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32l1xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32l1xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32l1xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_Init) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32l1xx_hal.o(.text.HAL_Init) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l1xx_hal.o(.text.HAL_Init) refers to stm32l1xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32l1xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_InitTick) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.text.HAL_InitTick) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal.o(.text.HAL_InitTick) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32l1xx_hal.o(.text.HAL_InitTick) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32l1xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l1xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_DeInit) refers to stm32l1xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32l1xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32l1xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_IncTick) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.text.HAL_IncTick) refers to stm32l1xx_hal.o(.bss.uwTick) for uwTick
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32l1xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_GetTick) refers to stm32l1xx_hal.o(.bss.uwTick) for uwTick
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_GetTickPrio) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32l1xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_SetTickFreq) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.text.HAL_SetTickFreq) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32l1xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_GetTickFreq) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32l1xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32l1xx_hal.o(.text.HAL_Delay) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal.o(.text.HAL_Delay) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32l1xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32l1xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32l1xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32l1xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32l1xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32l1xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32l1xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32l1xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32l1xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32l1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l1xx.o(.rodata.PLLMulTable) for PLLMulTable
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l1xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to system_stm32l1xx.o(.rodata.PLLMulTable) for PLLMulTable
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32l1xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for HAL_RCCEx_LSECSS_Callback
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback) refers to stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l1xx_hal_flash_ex.o(.text.FLASH_PageErase) for FLASH_PageErase
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32l1xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32l1xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.FLASH_PageErase) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase) refers to stm32l1xx_hal_flash_ex.o(.text.FLASH_PageErase) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32l1xx_hal_flash_ex.o(.text.FLASH_OB_WRPConfig) for FLASH_OB_WRPConfig
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.FLASH_OB_WRPConfig) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.text.FLASH_OB_WRPConfig) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_WRPConfig) refers to stm32l1xx_hal_flash_ex.o(.text.FLASH_OB_WRPConfig) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Unlock) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Unlock) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Lock) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Lock) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Erase) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Erase) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Erase) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Erase) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Program) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Program) refers to stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Program) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Program) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram) refers to stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram) for [Anonymous Symbol]
    stm32l1xx_hal_flash_ramfunc.o(.RamFunc) refers to stm32l1xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32l1xx_hal_flash_ramfunc.o(.ARM.exidx.RamFunc) refers to stm32l1xx_hal_flash_ramfunc.o(.RamFunc) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32l1xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32l1xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFastWakeUp) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFastWakeUp) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFastWakeUp) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFastWakeUp) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUltraLowPower) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUltraLowPower) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUltraLowPower) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUltraLowPower) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32l1xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32l1xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32l1xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32l1xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_EnableRegion) refers to stm32l1xx_hal_cortex.o(.text.HAL_MPU_EnableRegion) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_DisableRegion) refers to stm32l1xx_hal_cortex.o(.text.HAL_MPU_DisableRegion) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32l1xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32l1xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    system_stm32l1xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32l1xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32l1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l1xx.o(.rodata.PLLMulTable) for PLLMulTable
    system_stm32l1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32l1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32l1xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32l1xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxThreadDelay) for EvrRtxThreadDelay
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxThreadDelayUntil) for EvrRtxThreadDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxThreadDelayCompleted) for EvrRtxThreadDelayCompleted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxThreadDelayCompleted) for EvrRtxThreadDelayCompleted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelay) refers to rtx_evr.o(.text.EvrRtxThreadDelay) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelayUntil) refers to rtx_evr.o(.text.EvrRtxThreadDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelayCompleted) refers to rtx_evr.o(.text.EvrRtxThreadDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for .L_MergedGlobals
    rtx_lib.o(.text.__user_perthread_libspace) refers to main.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to main.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.data.irqRtxLibRef) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to main.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadDelayCompleted) for EvrRtxThreadDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to main.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to main.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to main.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32l1xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32l151xd.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.SystemClock_Config), (126 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.Error_Handler), (10 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.text.UserIdleProcess), (2 bytes).
    Removing main.o(.ARM.exidx.text.UserIdleProcess), (8 bytes).
    Removing main.o(.text.osRtxIdleThread), (6 bytes).
    Removing main.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing main.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32l1xx_hal_msp.o(.text), (0 bytes).
    Removing stm32l1xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32l1xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32l1xx_it.o(.text), (0 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32l1xx_it.o(.ARM.exidx.text.TIM11_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text), (0 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (70 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start), (102 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (42 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (50 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (206 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (20 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMAError), (92 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (60 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Init), (300 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (70 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start), (180 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (98 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (250 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (132 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (548 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (104 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (56 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (178 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (300 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (70 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (180 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (98 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (250 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (132 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (548 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (178 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Init), (300 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (70 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start), (180 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (98 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (250 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (132 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (474 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMACaptureCplt), (104 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (56 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (178 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (304 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (62 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (74 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (60 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (90 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (76 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (398 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (62 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (132 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (148 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (174 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (186 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (470 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (204 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (230 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (346 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (316 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (368 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (28 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (386 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMATriggerCplt), (20 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (108 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (28 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (384 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (108 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (36 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (278 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (412 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (86 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (216 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (86 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (52 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (4 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (32 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (6 bytes).
    Removing stm32l1xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32l1xx_hal_tim.o(.rodata.cst16), (32 bytes).
    Removing stm32l1xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32l1xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (126 bytes).
    Removing stm32l1xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32l1xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (26 bytes).
    Removing stm32l1xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32l1xx_hal.o(.text), (0 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_InitTick), (78 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DeInit), (36 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_SetTickFreq), (38 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_Delay), (40 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetUIDw0), (10 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetUIDw1), (10 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_GetUIDw2), (10 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32l1xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32l1xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_DeInit), (198 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (108 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (86 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (38 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (144 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (28 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32l1xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (298 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (38 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (138 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS), (14 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS), (30 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT), (54 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler), (28 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback), (2 bytes).
    Removing stm32l1xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text), (0 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program), (64 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (296 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (76 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (356 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (2 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (2 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_Unlock), (76 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_Lock), (20 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (76 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (20 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (24 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32l1xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32l1xx_hal_flash.o(.bss.pFlash), (24 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (176 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.FLASH_PageErase), (44 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (106 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (316 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.FLASH_OB_WRPConfig), (226 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_WRPConfig), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (70 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram), (82 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig), (24 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Unlock), (44 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Unlock), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Lock), (20 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Lock), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Erase), (88 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Erase), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_Program), (244 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_Program), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram), (18 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram), (8 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram), (18 bytes).
    Removing stm32l1xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram), (8 bytes).
    Removing stm32l1xx_hal_flash_ramfunc.o(.text), (0 bytes).
    Removing stm32l1xx_hal_flash_ramfunc.o(.RamFunc), (1152 bytes).
    Removing stm32l1xx_hal_flash_ramfunc.o(.ARM.exidx.RamFunc), (72 bytes).
    Removing stm32l1xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_Init), (478 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (492 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (10 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (22 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32l1xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text), (0 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_Init), (160 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_DeInit), (128 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_Start), (110 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_Start_IT), (158 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort), (74 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (88 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (296 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (176 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (82 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (118 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32l1xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32l1xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (12 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (12 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (22 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (22 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (50 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (60 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (30 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32l1xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFastWakeUp), (12 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFastWakeUp), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFastWakeUp), (12 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFastWakeUp), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUltraLowPower), (12 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableUltraLowPower), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUltraLowPower), (12 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableUltraLowPower), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode), (14 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode), (16 bytes).
    Removing stm32l1xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (40 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (44 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_MPU_Disable), (18 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_MPU_EnableRegion), (22 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_EnableRegion), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_MPU_DisableRegion), (22 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_DisableRegion), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (94 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (88 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (32 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (36 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (32 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (36 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (26 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (4 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32l1xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text), (0 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (180 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (150 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (136 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (12 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (12 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (40 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_GetPending), (28 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (24 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32l1xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (24 bytes).
    Removing stm32l1xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing system_stm32l1xx.o(.text), (0 bytes).
    Removing system_stm32l1xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32l1xx.o(.text.SystemCoreClockUpdate), (142 bytes).
    Removing system_stm32l1xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (56 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (56 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (24 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (58 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (44 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (60 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (238 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (150 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (186 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (274 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (308 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (122 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelStart), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoined), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadExit), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWait), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDelay), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDelayUntil), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCallback), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueuePut), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueuePutPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueInsertPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueInserted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNotInserted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueRetrieved), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelPreInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (120 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelStart), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (54 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (20 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelStart), (176 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (100 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (172 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (150 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (162 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (192 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (80 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (692 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (164 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (278 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (218 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (44 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueuePut), (164 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (216 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (80 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (46 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueNew), (382 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess), (540 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueuePut), (380 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGet), (512 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (474 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (150 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRelease), (96 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (38 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (42 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (64 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (44 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (132 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (144 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (176 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (140 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (136 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (122 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.text.osRtxPostProcess), (118 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadRegPtr), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStartup), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadNew), (586 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadNew), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadExit), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPostProcess), (154 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (228 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (244 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (180 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (346 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (206 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (226 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (382 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadExit), (244 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (490 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (184 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (342 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (258 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerTick), (230 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (78 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (60 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (186 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (38 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (260 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (100 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (128 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (72 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).

1234 unused section(s) (total 47106 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../CMSIS/CMSIS/RTOS2/RTX/Source/ARM/irq_cm3.s 0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ../../../hal/st/STM32CubeL1/Drivers/CMSIS/Device/ST/STM32L1xx/Source/Templates/arm/startup_stm32l151xd.s 0x00000000   Number         0  startup_stm32l151xd.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32l1xx_hal.c                          0x00000000   Number         0  stm32l1xx_hal.o ABSOLUTE
    stm32l1xx_hal_cortex.c                   0x00000000   Number         0  stm32l1xx_hal_cortex.o ABSOLUTE
    stm32l1xx_hal_dma.c                      0x00000000   Number         0  stm32l1xx_hal_dma.o ABSOLUTE
    stm32l1xx_hal_exti.c                     0x00000000   Number         0  stm32l1xx_hal_exti.o ABSOLUTE
    stm32l1xx_hal_flash.c                    0x00000000   Number         0  stm32l1xx_hal_flash.o ABSOLUTE
    stm32l1xx_hal_flash_ex.c                 0x00000000   Number         0  stm32l1xx_hal_flash_ex.o ABSOLUTE
    stm32l1xx_hal_flash_ramfunc.c            0x00000000   Number         0  stm32l1xx_hal_flash_ramfunc.o ABSOLUTE
    stm32l1xx_hal_gpio.c                     0x00000000   Number         0  stm32l1xx_hal_gpio.o ABSOLUTE
    stm32l1xx_hal_msp.c                      0x00000000   Number         0  stm32l1xx_hal_msp.o ABSOLUTE
    stm32l1xx_hal_pwr.c                      0x00000000   Number         0  stm32l1xx_hal_pwr.o ABSOLUTE
    stm32l1xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32l1xx_hal_pwr_ex.o ABSOLUTE
    stm32l1xx_hal_rcc.c                      0x00000000   Number         0  stm32l1xx_hal_rcc.o ABSOLUTE
    stm32l1xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32l1xx_hal_rcc_ex.o ABSOLUTE
    stm32l1xx_hal_tim.c                      0x00000000   Number         0  stm32l1xx_hal_tim.o ABSOLUTE
    stm32l1xx_hal_tim_ex.c                   0x00000000   Number         0  stm32l1xx_hal_tim_ex.o ABSOLUTE
    stm32l1xx_hal_timebase_tim.c             0x00000000   Number         0  stm32l1xx_hal_timebase_tim.o ABSOLUTE
    stm32l1xx_it.c                           0x00000000   Number         0  stm32l1xx_it.o ABSOLUTE
    system_stm32l1xx.c                       0x00000000   Number         0  system_stm32l1xx.o ABSOLUTE
    RESET                                    0x08000000   Section      292  startup_stm32l151xd.o(RESET)
    !!!main                                  0x08000124   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800012c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000160   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0800017c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000198   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800019a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800019a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0800019c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800019e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800019e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001a0   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001a0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001a0   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x080001a6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001ae   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001b2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001b2   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001ba   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001bc   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001bc   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001c0   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001c8   Section       64  startup_stm32l151xd.o(.text)
    .text                                    0x08000208   Section      148  irq_cm3.o(.text)
    .text                                    0x0800029c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080002ea   Section        0  heapauxi.o(.text)
    .text                                    0x080002f0   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800033a   Section        0  exit.o(.text)
    .text                                    0x0800034c   Section        8  libspace.o(.text)
    .text                                    0x08000354   Section        0  sys_exit.o(.text)
    .text                                    0x08000360   Section        2  use_no_semi.o(.text)
    .text                                    0x08000362   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000364   Section        0  stm32l1xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08000368   Section        0  stm32l1xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x0800036c   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08000370   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08000374   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x08000378   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800037c   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08000380   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000384   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08000388   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x0800038c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08000390   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08000394   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08000398   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x0800039c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x080003a0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x080003a4   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x080003a8   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x080003ac   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x080003b0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x080003b4   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x080003b8   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x080003bc   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x080003c0   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x080003c4   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x080003c8   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x080003cc   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x080003d0   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x080003d4   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x080003d8   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x080003dc   Section        0  rtx_evr.o(.text.EvrRtxThreadDelayCompleted)
    [Anonymous Symbol]                       0x080003e0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080003e4   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x080003e8   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x080003ec   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x080003f0   Section        0  stm32l1xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080003fc   Section        0  stm32l1xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08000418   Section        0  stm32l1xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08000438   Section        0  stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x080004e8   Section        0  stm32l1xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08000544   Section        0  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08000564   Section        0  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080005bc   Section        0  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080005dc   Section        0  stm32l1xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD)
    [Anonymous Symbol]                       0x0800065c   Section        0  stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnablePVD)
    [Anonymous Symbol]                       0x08000668   Section        0  stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08000894   Section        0  stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x080008d4   Section        0  stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x080008fc   Section        0  stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08000e60   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08000f8c   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x08000f90   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08001000   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08001004   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x0800112c   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x08001130   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08001134   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x08001148   Section        0  stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x0800114c   Section        0  stm32l1xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001150   Section        0  stm32l1xx_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08001154   Section        0  stm32l1xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08001158   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08001164   Section        0  system_stm32l1xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08001168   Section        0  stm32l1xx_it.o(.text.TIM11_IRQHandler)
    [Anonymous Symbol]                       0x08001174   Section        0  stm32l1xx_it.o(.text.UsageFault_Handler)
    __tagsym$$used.1                         0x08001178   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08001178   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x080011b8   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x080011b8   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x080011c0   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x080011c0   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080011e0   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080011e0   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001218   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x0800121c   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080012cc   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08001308   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08001340   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0800137c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080013b4   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080013ec   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08001424   Section        0  main.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x08001428   Section        0  rtx_lib.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x0800142c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800150c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800158c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080015d0   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800161c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08001678   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x0800172c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080017d4   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08001a10   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08001bc0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08001bdc   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08001c44   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08001c60   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08001d18   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001d90   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08001dc0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08001de0   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001f10   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001ff4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    svcRtxKernelGetState                     0x08002075   Thumb Code    22  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08002074   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x0800208d   Thumb Code   408  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800208c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxMutexAcquire                       0x08002225   Thumb Code   230  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08002224   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800230d   Thumb Code   288  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x0800230c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x0800242d   Thumb Code   144  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x0800242c   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080024bd   Thumb Code   306  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080024bc   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __tagsym$$used.4                         0x080025f0   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x080026b8   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x080026b8   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x080026dc   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x080026dc   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x080026f4   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x080026f4   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08002718   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08002718   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L_MergedGlobals                         0x20000000   Data           8  stm32l1xx_hal.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000000   Section        0  stm32l1xx_hal.o(.data..L_MergedGlobals)
    .bss                                     0x200000b0   Section       96  libspace.o(.bss)
    os_isr_queue                             0x20000150   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000150   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000190   Data        4096  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x20001190   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20001190   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x200011c4   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x200011c4   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20001214   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20001214   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001258   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200012a0   Data         512  rtx_lib.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x200012a0   Section        0  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x200014a0   Data         512  rtx_lib.o(.bss.os.thread.stack)
    os_kernel_is_active.os_kernel_active     0x200016a0   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x200016a0   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x200016a8   Data         512  startup_stm32l151xd.o(HEAP)
    HEAP                                     0x200016a8   Section      512  startup_stm32l151xd.o(HEAP)
    Stack_Mem                                0x200018a8   Data        1024  startup_stm32l151xd.o(STACK)
    STACK                                    0x200018a8   Section     1024  startup_stm32l151xd.o(STACK)
    __initial_sp                             0x20001ca8   Data           0  startup_stm32l151xd.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000124   Number         0  startup_stm32l151xd.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32l151xd.o(RESET)
    __Vectors_End                            0x08000124   Data           0  startup_stm32l151xd.o(RESET)
    __main                                   0x08000125   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800012d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800012d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800012d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800013b   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000161   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0800017d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000199   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0800019b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x0800019d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800019f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001a1   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001a1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001a1   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001af   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001b3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001b3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001bb   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001bd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001bd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001c1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001c9   Thumb Code     8  startup_stm32l151xd.o(.text)
    ADC1_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    COMP_ACQ_IRQHandler                      0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    COMP_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DAC_IRQHandler                           0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA2_Channel1_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA2_Channel2_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA2_Channel3_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA2_Channel4_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    DMA2_Channel5_IRQHandler                 0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI0_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI15_10_IRQHandler                     0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI1_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI2_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI3_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI4_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    EXTI9_5_IRQHandler                       0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    FLASH_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    I2C1_ER_IRQHandler                       0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    I2C1_EV_IRQHandler                       0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    I2C2_ER_IRQHandler                       0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    I2C2_EV_IRQHandler                       0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    PVD_IRQHandler                           0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    RCC_IRQHandler                           0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    RTC_Alarm_IRQHandler                     0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    RTC_WKUP_IRQHandler                      0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    SDIO_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    SPI1_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    SPI2_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    SPI3_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TAMPER_STAMP_IRQHandler                  0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM10_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM2_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM3_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM4_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM5_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM6_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM7_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    TIM9_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    UART4_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    UART5_IRQHandler                         0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USART1_IRQHandler                        0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USART2_IRQHandler                        0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USART3_IRQHandler                        0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USB_FS_WKUP_IRQHandler                   0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USB_HP_IRQHandler                        0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    USB_LP_IRQHandler                        0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    WWDG_IRQHandler                          0x080001e3   Thumb Code     0  startup_stm32l151xd.o(.text)
    __user_initial_stackheap                 0x080001e5   Thumb Code     0  startup_stm32l151xd.o(.text)
    SVC_Handler                              0x08000209   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x08000275   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x08000285   Thumb Code    16  irq_cm3.o(.text)
    __aeabi_memclr4                          0x0800029d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800029d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800029d   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080002a1   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080002eb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002ed   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002ef   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x080002f1   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800033b   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0800034d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800034d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000355   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000361   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000361   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000363   Thumb Code     0  indicate_semi.o(.text)
    BusFault_Handler                         0x08000365   Thumb Code     2  stm32l1xx_it.o(.text.BusFault_Handler)
    DebugMon_Handler                         0x08000369   Thumb Code     2  stm32l1xx_it.o(.text.DebugMon_Handler)
    EvrRtxEventFlagsWaitTimeout              0x0800036d   Thumb Code     2  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08000371   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelGetState                     0x08000375   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelInitialize                   0x08000379   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x0800037d   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxMemoryAlloc                        0x08000381   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08000385   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08000389   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x0800038d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08000391   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08000395   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08000399   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueGetTimeout             0x0800039d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueuePutTimeout             0x080003a1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMutexAcquire                       0x080003a5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x080003a9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x080003ad   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x080003b1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x080003b5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x080003b9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x080003bd   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x080003c1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x080003c5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x080003c9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x080003cd   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x080003d1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x080003d5   Thumb Code     2  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x080003d9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadDelayCompleted               0x080003dd   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadDelayCompleted)
    EvrRtxThreadFlagsWaitTimeout             0x080003e1   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadPreempted                    0x080003e5   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x080003e9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x080003ed   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    HAL_GetTick                              0x080003f1   Thumb Code    12  stm32l1xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x080003fd   Thumb Code    26  stm32l1xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08000419   Thumb Code    30  stm32l1xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08000439   Thumb Code   174  stm32l1xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MspInit                              0x080004e9   Thumb Code    92  stm32l1xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08000545   Thumb Code    32  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08000565   Thumb Code    86  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x080005bd   Thumb Code    32  stm32l1xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWR_ConfigPVD                        0x080005dd   Thumb Code   128  stm32l1xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD)
    HAL_PWR_EnablePVD                        0x0800065d   Thumb Code    12  stm32l1xx_hal_pwr.o(.text.HAL_PWR_EnablePVD)
    HAL_RCC_ClockConfig                      0x08000669   Thumb Code   554  stm32l1xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x08000895   Thumb Code    62  stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetPCLK2Freq                     0x080008d5   Thumb Code    38  stm32l1xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_OscConfig                        0x080008fd   Thumb Code  1380  stm32l1xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_TIM_Base_Init                        0x08000e61   Thumb Code   300  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08000f8d   Thumb Code     2  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x08000f91   Thumb Code   110  stm32l1xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08001001   Thumb Code     2  stm32l1xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08001005   Thumb Code   294  stm32l1xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x0800112d   Thumb Code     2  stm32l1xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x08001131   Thumb Code     2  stm32l1xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08001135   Thumb Code    20  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x08001149   Thumb Code     2  stm32l1xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HardFault_Handler                        0x0800114d   Thumb Code     2  stm32l1xx_it.o(.text.HardFault_Handler)
    MemManage_Handler                        0x08001151   Thumb Code     2  stm32l1xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08001155   Thumb Code     2  stm32l1xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x08001159   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    SystemInit                               0x08001165   Thumb Code     2  system_stm32l1xx.o(.text.SystemInit)
    TIM11_IRQHandler                         0x08001169   Thumb Code    12  stm32l1xx_it.o(.text.TIM11_IRQHandler)
    UsageFault_Handler                       0x08001175   Thumb Code     2  stm32l1xx_it.o(.text.UsageFault_Handler)
    _mutex_acquire                           0x08001179   Thumb Code    64  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x080011b9   Thumb Code     6  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x080011c1   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080011e1   Thumb Code    56  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08001219   Thumb Code     4  rtx_lib.o(.text._platform_post_stackheap_init)
    main                                     0x0800121d   Thumb Code   174  main.o(.text.main)
    osKernelGetState                         0x080012cd   Thumb Code    60  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08001309   Thumb Code    54  rtx_kernel.o(.text.osKernelInitialize)
    osMutexAcquire                           0x08001341   Thumb Code    60  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0800137d   Thumb Code    56  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080013b5   Thumb Code    56  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080013ed   Thumb Code    56  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08001425   Thumb Code     2  main.o(.text.osRtxErrorNotify)
    osRtxKernelPreInit                       0x08001429   Thumb Code     4  rtx_lib.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x0800142d   Thumb Code   224  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800150d   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800158d   Thumb Code    68  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080015d1   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800161d   Thumb Code    92  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08001679   Thumb Code   180  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxPendSV_Handler                      0x0800172d   Thumb Code   166  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxThreadDelayTick                     0x080017d5   Thumb Code   572  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08001a11   Thumb Code   430  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08001bc1   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08001bdd   Thumb Code   104  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08001c45   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08001c61   Thumb Code   184  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08001d19   Thumb Code   118  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadStackCheck                    0x08001d91   Thumb Code    46  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x08001dc1   Thumb Code    32  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08001de1   Thumb Code   304  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001f11   Thumb Code   226  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001ff5   Thumb Code   126  rtx_system.o(.text.osRtxTick_Handler)
    osRtxConfig                              0x080025f0   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x08002658   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08002690   Data          16  system_stm32l1xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080026a0   Data           8  system_stm32l1xx.o(.rodata.APBPrescTable)
    PLLMulTable                              0x080026a8   Data           9  system_stm32l1xx.o(.rodata.PLLMulTable)
    osRtxUserSVC                             0x080026b4   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08002724   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002744   Number         0  anon$$obj.o(Region$$Table)
    uwTickPrio                               0x20000000   Data           4  stm32l1xx_hal.o(.data..L_MergedGlobals)
    uwTickFreq                               0x20000004   Data           4  stm32l1xx_hal.o(.data..L_MergedGlobals)
    SystemCoreClock                          0x20000008   Data           4  system_stm32l1xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x2000000c   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x200000b0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000110   Data           0  libspace.o(.bss)
    htim11                                   0x20000110   Data          64  stm32l1xx_hal_timebase_tim.o(.bss.htim11)
    .bss.os.msgqueue.cb$$Base                0x20001190   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x200011c4   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20001214   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000129c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uwTick                                   0x200016a4   Data           4  stm32l1xx_hal.o(.bss.uwTick)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000125

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000027f8, Max: 0x00060000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002744, Max: 0x00060000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000124   Data   RO            3    RESET               startup_stm32l151xd.o
    0x08000124   0x08000124   0x00000008   Code   RO         1610  * !!!main             c_w.l(__main.o)
    0x0800012c   0x0800012c   0x00000034   Code   RO         1773    !!!scatter          c_w.l(__scatter.o)
    0x08000160   0x08000160   0x0000001a   Code   RO         1775    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800017a   0x0800017a   0x00000002   PAD
    0x0800017c   0x0800017c   0x0000001c   Code   RO         1777    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000198   0x08000198   0x00000002   Code   RO         1637    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1644    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1646    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1649    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1651    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1653    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1656    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1658    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1660    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1662    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1664    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1666    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1668    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1670    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1672    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1674    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1676    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1680    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1682    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1684    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO         1686    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800019a   0x0800019a   0x00000002   Code   RO         1687    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800019c   0x0800019c   0x00000002   Code   RO         1709    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1724    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1726    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1729    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1732    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1734    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000000   Code   RO         1737    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800019e   0x0800019e   0x00000002   Code   RO         1738    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001a0   0x080001a0   0x00000000   Code   RO         1612    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001a0   0x080001a0   0x00000000   Code   RO         1616    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001a0   0x080001a0   0x00000006   Code   RO         1628    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO         1617    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001ae   0x080001ae   0x00000004   Code   RO         1619    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1621    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001b2   0x080001b2   0x00000008   Code   RO         1622    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001ba   0x080001ba   0x00000002   Code   RO         1641    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001bc   0x080001bc   0x00000000   Code   RO         1689    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001bc   0x080001bc   0x00000004   Code   RO         1690    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001c0   0x080001c0   0x00000006   Code   RO         1691    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001c6   0x080001c6   0x00000002   PAD
    0x080001c8   0x080001c8   0x00000040   Code   RO            4    .text               startup_stm32l151xd.o
    0x08000208   0x08000208   0x00000094   Code   RO         1567    .text               irq_cm3.o
    0x0800029c   0x0800029c   0x0000004e   Code   RO         1606    .text               c_w.l(rt_memclr_w.o)
    0x080002ea   0x080002ea   0x00000006   Code   RO         1608    .text               c_w.l(heapauxi.o)
    0x080002f0   0x080002f0   0x0000004a   Code   RO         1630    .text               c_w.l(sys_stackheap_outer.o)
    0x0800033a   0x0800033a   0x00000012   Code   RO         1632    .text               c_w.l(exit.o)
    0x0800034c   0x0800034c   0x00000008   Code   RO         1638    .text               c_w.l(libspace.o)
    0x08000354   0x08000354   0x0000000c   Code   RO         1699    .text               c_w.l(sys_exit.o)
    0x08000360   0x08000360   0x00000002   Code   RO         1714    .text               c_w.l(use_no_semi.o)
    0x08000362   0x08000362   0x00000000   Code   RO         1716    .text               c_w.l(indicate_semi.o)
    0x08000362   0x08000362   0x00000002   PAD
    0x08000364   0x08000364   0x00000002   Code   RO           63    .text.BusFault_Handler  stm32l1xx_it.o
    0x08000366   0x08000366   0x00000002   PAD
    0x08000368   0x08000368   0x00000002   Code   RO           67    .text.DebugMon_Handler  stm32l1xx_it.o
    0x0800036a   0x0800036a   0x00000002   PAD
    0x0800036c   0x0800036c   0x00000002   Code   RO          959    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x0800036e   0x0800036e   0x00000002   PAD
    0x08000370   0x08000370   0x00000002   Code   RO          785    .text.EvrRtxKernelError  rtx_evr.o
    0x08000372   0x08000372   0x00000002   PAD
    0x08000374   0x08000374   0x00000002   Code   RO          795    .text.EvrRtxKernelGetState  rtx_evr.o
    0x08000376   0x08000376   0x00000002   PAD
    0x08000378   0x08000378   0x00000002   Code   RO          787    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x0800037a   0x0800037a   0x00000002   PAD
    0x0800037c   0x0800037c   0x00000002   Code   RO          789    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x0800037e   0x0800037e   0x00000002   PAD
    0x08000380   0x08000380   0x00000002   Code   RO          775    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08000382   0x08000382   0x00000002   PAD
    0x08000384   0x08000384   0x00000002   Code   RO          781    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08000386   0x08000386   0x00000002   PAD
    0x08000388   0x08000388   0x00000002   Code   RO          783    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x0800038a   0x0800038a   0x00000002   PAD
    0x0800038c   0x0800038c   0x00000002   Code   RO          779    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x0800038e   0x0800038e   0x00000002   PAD
    0x08000390   0x08000390   0x00000002   Code   RO          777    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08000392   0x08000392   0x00000002   PAD
    0x08000394   0x08000394   0x00000002   Code   RO          773    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08000396   0x08000396   0x00000002   PAD
    0x08000398   0x08000398   0x00000002   Code   RO         1037    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x0800039a   0x0800039a   0x00000002   PAD
    0x0800039c   0x0800039c   0x00000002   Code   RO         1085    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x0800039e   0x0800039e   0x00000002   PAD
    0x080003a0   0x080003a0   0x00000002   Code   RO         1073    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x080003a2   0x080003a2   0x00000002   PAD
    0x080003a4   0x080003a4   0x00000002   Code   RO          977    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x080003a6   0x080003a6   0x00000002   PAD
    0x080003a8   0x080003a8   0x00000002   Code   RO          979    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x080003aa   0x080003aa   0x00000002   PAD
    0x080003ac   0x080003ac   0x00000002   Code   RO          981    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x080003ae   0x080003ae   0x00000002   PAD
    0x080003b0   0x080003b0   0x00000002   Code   RO          983    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x080003b2   0x080003b2   0x00000002   PAD
    0x080003b4   0x080003b4   0x00000002   Code   RO          973    .text.EvrRtxMutexCreated  rtx_evr.o
    0x080003b6   0x080003b6   0x00000002   PAD
    0x080003b8   0x080003b8   0x00000002   Code   RO          993    .text.EvrRtxMutexDelete  rtx_evr.o
    0x080003ba   0x080003ba   0x00000002   PAD
    0x080003bc   0x080003bc   0x00000002   Code   RO          995    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x080003be   0x080003be   0x00000002   PAD
    0x080003c0   0x080003c0   0x00000002   Code   RO          969    .text.EvrRtxMutexError  rtx_evr.o
    0x080003c2   0x080003c2   0x00000002   PAD
    0x080003c4   0x080003c4   0x00000002   Code   RO          971    .text.EvrRtxMutexNew  rtx_evr.o
    0x080003c6   0x080003c6   0x00000002   PAD
    0x080003c8   0x080003c8   0x00000002   Code   RO          985    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x080003ca   0x080003ca   0x00000002   PAD
    0x080003cc   0x080003cc   0x00000002   Code   RO          987    .text.EvrRtxMutexRelease  rtx_evr.o
    0x080003ce   0x080003ce   0x00000002   PAD
    0x080003d0   0x080003d0   0x00000002   Code   RO          989    .text.EvrRtxMutexReleased  rtx_evr.o
    0x080003d2   0x080003d2   0x00000002   PAD
    0x080003d4   0x080003d4   0x00000002   Code   RO         1009    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x080003d6   0x080003d6   0x00000002   PAD
    0x080003d8   0x080003d8   0x00000002   Code   RO          869    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x080003da   0x080003da   0x00000002   PAD
    0x080003dc   0x080003dc   0x00000002   Code   RO          911    .text.EvrRtxThreadDelayCompleted  rtx_evr.o
    0x080003de   0x080003de   0x00000002   PAD
    0x080003e0   0x080003e0   0x00000002   Code   RO          901    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x080003e2   0x080003e2   0x00000002   PAD
    0x080003e4   0x080003e4   0x00000002   Code   RO          873    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x080003e6   0x080003e6   0x00000002   PAD
    0x080003e8   0x080003e8   0x00000002   Code   RO          875    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x080003ea   0x080003ea   0x00000002   PAD
    0x080003ec   0x080003ec   0x00000002   Code   RO          871    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x080003ee   0x080003ee   0x00000002   PAD
    0x080003f0   0x080003f0   0x0000000c   Code   RO          321    .text.HAL_GetTick   stm32l1xx_hal.o
    0x080003fc   0x080003fc   0x0000001a   Code   RO          319    .text.HAL_IncTick   stm32l1xx_hal.o
    0x08000416   0x08000416   0x00000002   PAD
    0x08000418   0x08000418   0x0000001e   Code   RO          309    .text.HAL_Init      stm32l1xx_hal.o
    0x08000436   0x08000436   0x00000002   PAD
    0x08000438   0x08000438   0x000000ae   Code   RO           42    .text.HAL_InitTick  stm32l1xx_hal_timebase_tim.o
    0x080004e6   0x080004e6   0x00000002   PAD
    0x080004e8   0x080004e8   0x0000005c   Code   RO           34    .text.HAL_MspInit   stm32l1xx_hal_msp.o
    0x08000544   0x08000544   0x00000020   Code   RO          631    .text.HAL_NVIC_EnableIRQ  stm32l1xx_hal_cortex.o
    0x08000564   0x08000564   0x00000056   Code   RO          629    .text.HAL_NVIC_SetPriority  stm32l1xx_hal_cortex.o
    0x080005ba   0x080005ba   0x00000002   PAD
    0x080005bc   0x080005bc   0x00000020   Code   RO          627    .text.HAL_NVIC_SetPriorityGrouping  stm32l1xx_hal_cortex.o
    0x080005dc   0x080005dc   0x00000080   Code   RO          570    .text.HAL_PWR_ConfigPVD  stm32l1xx_hal_pwr.o
    0x0800065c   0x0800065c   0x0000000c   Code   RO          572    .text.HAL_PWR_EnablePVD  stm32l1xx_hal_pwr.o
    0x08000668   0x08000668   0x0000022a   Code   RO          373    .text.HAL_RCC_ClockConfig  stm32l1xx_hal_rcc.o
    0x08000892   0x08000892   0x00000002   PAD
    0x08000894   0x08000894   0x0000003e   Code   RO          391    .text.HAL_RCC_GetClockConfig  stm32l1xx_hal_rcc.o
    0x080008d2   0x080008d2   0x00000002   PAD
    0x080008d4   0x080008d4   0x00000026   Code   RO          387    .text.HAL_RCC_GetPCLK2Freq  stm32l1xx_hal_rcc.o
    0x080008fa   0x080008fa   0x00000002   PAD
    0x080008fc   0x080008fc   0x00000564   Code   RO          371    .text.HAL_RCC_OscConfig  stm32l1xx_hal_rcc.o
    0x08000e60   0x08000e60   0x0000012c   Code   RO           78    .text.HAL_TIM_Base_Init  stm32l1xx_hal_tim.o
    0x08000f8c   0x08000f8c   0x00000002   Code   RO           80    .text.HAL_TIM_Base_MspInit  stm32l1xx_hal_tim.o
    0x08000f8e   0x08000f8e   0x00000002   PAD
    0x08000f90   0x08000f90   0x0000006e   Code   RO           90    .text.HAL_TIM_Base_Start_IT  stm32l1xx_hal_tim.o
    0x08000ffe   0x08000ffe   0x00000002   PAD
    0x08001000   0x08001000   0x00000002   Code   RO          210    .text.HAL_TIM_IC_CaptureCallback  stm32l1xx_hal_tim.o
    0x08001002   0x08001002   0x00000002   PAD
    0x08001004   0x08001004   0x00000126   Code   RO          208    .text.HAL_TIM_IRQHandler  stm32l1xx_hal_tim.o
    0x0800112a   0x0800112a   0x00000002   PAD
    0x0800112c   0x0800112c   0x00000002   Code   RO          212    .text.HAL_TIM_OC_DelayElapsedCallback  stm32l1xx_hal_tim.o
    0x0800112e   0x0800112e   0x00000002   PAD
    0x08001130   0x08001130   0x00000002   Code   RO          214    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32l1xx_hal_tim.o
    0x08001132   0x08001132   0x00000002   PAD
    0x08001134   0x08001134   0x00000014   Code   RO           23    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x08001148   0x08001148   0x00000002   Code   RO          218    .text.HAL_TIM_TriggerCallback  stm32l1xx_hal_tim.o
    0x0800114a   0x0800114a   0x00000002   PAD
    0x0800114c   0x0800114c   0x00000002   Code   RO           59    .text.HardFault_Handler  stm32l1xx_it.o
    0x0800114e   0x0800114e   0x00000002   PAD
    0x08001150   0x08001150   0x00000002   Code   RO           61    .text.MemManage_Handler  stm32l1xx_it.o
    0x08001152   0x08001152   0x00000002   PAD
    0x08001154   0x08001154   0x00000002   Code   RO           57    .text.NMI_Handler   stm32l1xx_it.o
    0x08001156   0x08001156   0x00000002   PAD
    0x08001158   0x08001158   0x0000000c   Code   RO         1578    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08001164   0x08001164   0x00000002   Code   RO          703    .text.SystemInit    system_stm32l1xx.o
    0x08001166   0x08001166   0x00000002   PAD
    0x08001168   0x08001168   0x0000000c   Code   RO           69    .text.TIM11_IRQHandler  stm32l1xx_it.o
    0x08001174   0x08001174   0x00000002   Code   RO           65    .text.UsageFault_Handler  stm32l1xx_it.o
    0x08001176   0x08001176   0x00000002   PAD
    0x08001178   0x08001178   0x00000040   Code   RO         1186    .text._mutex_acquire  rtx_lib.o
    0x080011b8   0x080011b8   0x00000006   Code   RO         1190    .text._mutex_free   rtx_lib.o
    0x080011be   0x080011be   0x00000002   PAD
    0x080011c0   0x080011c0   0x00000020   Code   RO         1184    .text._mutex_initialize  rtx_lib.o
    0x080011e0   0x080011e0   0x00000038   Code   RO         1188    .text._mutex_release  rtx_lib.o
    0x08001218   0x08001218   0x00000004   Code   RO         1178    .text._platform_post_stackheap_init  rtx_lib.o
    0x0800121c   0x0800121c   0x000000ae   Code   RO           11    .text.main          main.o
    0x080012ca   0x080012ca   0x00000002   PAD
    0x080012cc   0x080012cc   0x0000003c   Code   RO         1122    .text.osKernelGetState  rtx_kernel.o
    0x08001308   0x08001308   0x00000036   Code   RO         1116    .text.osKernelInitialize  rtx_kernel.o
    0x0800133e   0x0800133e   0x00000002   PAD
    0x08001340   0x08001340   0x0000003c   Code   RO         1335    .text.osMutexAcquire  rtx_mutex.o
    0x0800137c   0x0800137c   0x00000038   Code   RO         1341    .text.osMutexDelete  rtx_mutex.o
    0x080013b4   0x080013b4   0x00000038   Code   RO         1331    .text.osMutexNew    rtx_mutex.o
    0x080013ec   0x080013ec   0x00000038   Code   RO         1337    .text.osMutexRelease  rtx_mutex.o
    0x08001424   0x08001424   0x00000002   Code   RO           21    .text.osRtxErrorNotify  main.o
    0x08001426   0x08001426   0x00000002   PAD
    0x08001428   0x08001428   0x00000004   Code   RO         1180    .text.osRtxKernelPreInit  rtx_lib.o
    0x0800142c   0x0800142c   0x000000e0   Code   RO         1215    .text.osRtxMemoryAlloc  rtx_memory.o
    0x0800150c   0x0800150c   0x00000080   Code   RO         1217    .text.osRtxMemoryFree  rtx_memory.o
    0x0800158c   0x0800158c   0x00000044   Code   RO         1213    .text.osRtxMemoryInit  rtx_memory.o
    0x080015d0   0x080015d0   0x0000004a   Code   RO         1229    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800161a   0x0800161a   0x00000002   PAD
    0x0800161c   0x0800161c   0x0000005c   Code   RO         1231    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x08001678   0x08001678   0x000000b4   Code   RO         1227    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x0800172c   0x0800172c   0x000000a6   Code   RO         1399    .text.osRtxPendSV_Handler  rtx_system.o
    0x080017d2   0x080017d2   0x00000002   PAD
    0x080017d4   0x080017d4   0x0000023c   Code   RO         1421    .text.osRtxThreadDelayTick  rtx_thread.o
    0x08001a10   0x08001a10   0x000001ae   Code   RO         1429    .text.osRtxThreadDispatch  rtx_thread.o
    0x08001bbe   0x08001bbe   0x00000002   PAD
    0x08001bc0   0x08001bc0   0x0000001a   Code   RO         1413    .text.osRtxThreadListGet  rtx_thread.o
    0x08001bda   0x08001bda   0x00000002   PAD
    0x08001bdc   0x08001bdc   0x00000068   Code   RO         1411    .text.osRtxThreadListPut  rtx_thread.o
    0x08001c44   0x08001c44   0x0000001a   Code   RO         1417    .text.osRtxThreadListRemove  rtx_thread.o
    0x08001c5e   0x08001c5e   0x00000002   PAD
    0x08001c60   0x08001c60   0x000000b8   Code   RO         1415    .text.osRtxThreadListSort  rtx_thread.o
    0x08001d18   0x08001d18   0x00000076   Code   RO         1419    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08001d8e   0x08001d8e   0x00000002   PAD
    0x08001d90   0x08001d90   0x0000002e   Code   RO         1427    .text.osRtxThreadStackCheck  rtx_thread.o
    0x08001dbe   0x08001dbe   0x00000002   PAD
    0x08001dc0   0x08001dc0   0x00000020   Code   RO         1425    .text.osRtxThreadSwitch  rtx_thread.o
    0x08001de0   0x08001de0   0x00000130   Code   RO         1433    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08001f10   0x08001f10   0x000000e2   Code   RO         1431    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08001ff2   0x08001ff2   0x00000002   PAD
    0x08001ff4   0x08001ff4   0x0000007e   Code   RO         1397    .text.osRtxTick_Handler  rtx_system.o
    0x08002072   0x08002072   0x00000002   PAD
    0x08002074   0x08002074   0x00000016   Code   RO         1124    .text.svcRtxKernelGetState  rtx_kernel.o
    0x0800208a   0x0800208a   0x00000002   PAD
    0x0800208c   0x0800208c   0x00000198   Code   RO         1154    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x08002224   0x08002224   0x000000e6   Code   RO         1347    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x0800230a   0x0800230a   0x00000002   PAD
    0x0800230c   0x0800230c   0x00000120   Code   RO         1353    .text.svcRtxMutexDelete  rtx_mutex.o
    0x0800242c   0x0800242c   0x00000090   Code   RO         1343    .text.svcRtxMutexNew  rtx_mutex.o
    0x080024bc   0x080024bc   0x00000132   Code   RO         1349    .text.svcRtxMutexRelease  rtx_mutex.o
    0x080025ee   0x080025ee   0x00000002   PAD
    0x080025f0   0x080025f0   0x000000a0   Data   RO         1196    .rodata             rtx_lib.o
    0x08002690   0x08002690   0x00000010   Data   RO          709    .rodata.AHBPrescTable  system_stm32l1xx.o
    0x080026a0   0x080026a0   0x00000008   Data   RO          710    .rodata.APBPrescTable  system_stm32l1xx.o
    0x080026a8   0x080026a8   0x00000009   Data   RO          708    .rodata.PLLMulTable  system_stm32l1xx.o
    0x080026b1   0x080026b1   0x00000003   PAD
    0x080026b4   0x080026b4   0x00000004   Data   RO         1198    .rodata.osRtxUserSVC  rtx_lib.o
    0x080026b8   0x080026b8   0x00000024   Data   RO         1193    .rodata.os_idle_thread_attr  rtx_lib.o
    0x080026dc   0x080026dc   0x00000018   Data   RO         1195    .rodata.os_timer_mq_attr  rtx_lib.o
    0x080026f4   0x080026f4   0x00000024   Data   RO         1194    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08002718   0x08002718   0x0000000b   Data   RO         1168    .rodata.str1.4      rtx_kernel.o
    0x08002723   0x08002723   0x00000001   PAD
    0x08002724   0x08002724   0x00000020   Data   RO         1772    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08002748, Size: 0x00001ca8, Max: 0x0000c000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002748   0x00000008   Data   RW          360    .data..L_MergedGlobals  stm32l1xx_hal.o
    0x20000008   0x08002750   0x00000004   Data   RW          707    .data.SystemCoreClock  system_stm32l1xx.o
    0x2000000c   0x08002754   0x000000a4   Data   RW         1169    .data.os            rtx_kernel.o
    0x200000b0        -       0x00000060   Zero   RW         1639    .bss                c_w.l(libspace.o)
    0x20000110        -       0x00000040   Zero   RW           48    .bss.htim11         stm32l1xx_hal_timebase_tim.o
    0x20000150        -       0x00001040   Zero   RW         1192    .bss.os             rtx_lib.o
    0x20001190        -       0x00000034   Zero   RW         1202    .bss.os.msgqueue.cb  rtx_lib.o
    0x200011c4        -       0x00000050   Zero   RW         1203    .bss.os.msgqueue.mem  rtx_lib.o
    0x20001214        -       0x00000088   Zero   RW         1200    .bss.os.thread.cb   rtx_lib.o
    0x2000129c   0x080027f8   0x00000004   PAD
    0x200012a0        -       0x00000400   Zero   RW         1201    .bss.os.thread.stack  rtx_lib.o
    0x200016a0        -       0x00000001   Zero   RW         1204    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x200016a1   0x080027f8   0x00000003   PAD
    0x200016a4        -       0x00000004   Zero   RW          359    .bss.uwTick         stm32l1xx_hal.o
    0x200016a8        -       0x00000200   Zero   RW            2    HEAP                startup_stm32l151xd.o
    0x200018a8        -       0x00000400   Zero   RW            1    STACK               startup_stm32l151xd.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       148         10          0          0          0        528   irq_cm3.o
       196          0          0          0          0       5864   main.o
        12          0          0          0          0       3980   os_systick.o
        66          0          0          0          0      23456   rtx_evr.o
       544          0         11        164          0      18953   rtx_kernel.o
       166          0        260          0       5453       7440   rtx_lib.o
       420          0          0          0          0       3427   rtx_memory.o
       346          0          0          0          0      21998   rtx_mempool.o
      1196          0          0          0          0      10803   rtx_mutex.o
       292          8          0          0          0       5717   rtx_system.o
      2068         10          0          0          0      49338   rtx_thread.o
        64         26        292          0       1536        956   startup_stm32l151xd.o
        68          0          0          8          4       6049   stm32l1xx_hal.o
       150          0          0          0          0      10028   stm32l1xx_hal_cortex.o
        92          0          0          0          0       1333   stm32l1xx_hal_msp.o
       140          0          0          0          0       4170   stm32l1xx_hal_pwr.o
      2034          4          0          0          0       9018   stm32l1xx_hal_rcc.o
       714          0          0          0          0      52318   stm32l1xx_hal_tim.o
       174          0          0          0         64       6147   stm32l1xx_hal_timebase_tim.o
        24          0          0          0          0        911   stm32l1xx_it.o
         2          0         33          4          0       2008   system_stm32l1xx.o

    ----------------------------------------------------------------------
      9056         58        632        176       7064     244442   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       140          0          4          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       364         16          0          0         96        664   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       358         16          0          0         96        664   c_w.l

    ----------------------------------------------------------------------
       364         16          0          0         96        664   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9420         74        632        176       7160     244606   Grand Totals
      9420         74        632        176       7160     244606   ELF Image Totals
      9420         74        632        176          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10052 (   9.82kB)
    Total RW  Size (RW Data + ZI Data)              7336 (   7.16kB)
    Total ROM Size (Code + RO Data + RW Data)      10228 (   9.99kB)

==============================================================================

